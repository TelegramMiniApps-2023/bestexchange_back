# Generated by Django 4.2.7 on 2024-03-14 09:09

from django.db import migrations, models
import django.db.models.deletion
import general_models.utils.model_validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('general_models', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlackListElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Элемент чёрного списка',
                'verbose_name_plural': 'Элементы чёрного списка',
                'ordering': ['city', 'direction__valute_from', 'direction__valute_to'],
            },
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('popular_count', models.IntegerField(default=0, verbose_name='Счётчик популярности')),
                ('display_name', models.CharField(blank=True, default=None, max_length=40, null=True, verbose_name='Отображение в админ панели')),
                ('actual_course', models.FloatField(blank=True, default=None, null=True, verbose_name='Актуальный курс обмена')),
                ('valute_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_valutes_from', to='general_models.valute', to_field='code_name', verbose_name='Отдаём')),
                ('valute_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_valutes_to', to='general_models.valute', to_field='code_name', verbose_name='Получаем')),
            ],
            options={
                'verbose_name': 'Направление для обмена',
                'verbose_name_plural': 'Направления для обмена',
                'ordering': ['valute_from', 'valute_to'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Название обменника(ru)')),
                ('en_name', models.CharField(blank=True, default=None, max_length=20, null=True, unique=True, verbose_name='Название обменника(en)')),
                ('partner_link', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Партнёрская ссылка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Статус обменника')),
                ('xml_url', models.CharField(max_length=50, verbose_name='Ссылка на XML файл')),
                ('period_for_create', models.IntegerField(blank=True, default=90, help_text='Значение - положительное целое число.При установлении в 0, останавливает задачу периодических добавлений', null=True, validators=[general_models.utils.model_validators.is_positive_validate], verbose_name='Частота добавления в секундах')),
                ('period_for_update', models.IntegerField(blank=True, default=60, help_text='Значение - положительное целое число.При установлении в 0, останавливает задачу периодических обновлений', null=True, validators=[general_models.utils.model_validators.is_positive_validate], verbose_name='Частота обновлений в секундах')),
                ('period_for_parse_black_list', models.IntegerField(blank=True, default=24, help_text='Рекомендуемое значение - 24 часа.\nЗначение - положительное целое число.При установлении в 0, останавливает задачу периодического парсинга чёрного списка', null=True, validators=[general_models.utils.model_validators.is_positive_validate], verbose_name='Частота парсинга чёрного списка в часах')),
                ('direction_black_list', models.ManyToManyField(to='cash.blacklistelement', verbose_name='Чёрный список')),
            ],
            options={
                'verbose_name': 'Обменник',
                'verbose_name_plural': 'Обменники',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, verbose_name='Имя пользователя')),
                ('text', models.TextField(verbose_name='Текст сообщения')),
                ('time_create', models.DateTimeField(auto_now=True, help_text='Если оставить поля пустыми, время установится автоматически по московскому часовому поясу', verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('Опубликован', 'Опубликован'), ('Модерация', 'Модерация'), ('Отклонён', 'Отклонён')], default='Модерация', help_text='При выборе статуса "Отклонён" попадает в очередь на удаление', max_length=20, verbose_name='Статус модерации')),
                ('moderation', models.BooleanField(default=False, verbose_name='Прошел модерацию?')),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='cash.exchange', verbose_name='Наличный обменник')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ('-time_create', 'status', 'exchange'),
                'unique_together': {('exchange', 'username', 'time_create')},
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название страны(ru)')),
                ('en_name', models.CharField(max_length=100, unique=True, verbose_name='Название страны(en)')),
                ('icon_url', models.FileField(blank=True, null=True, upload_to='icons/country/', verbose_name='Флаг страны')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'ordering': ('name',),
                'indexes': [models.Index(fields=['name'], name='cash_countr_name_f84870_idx'), models.Index(fields=['en_name'], name='cash_countr_en_name_0b5226_idx')],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, verbose_name='Имя пользователя')),
                ('text', models.TextField(verbose_name='Текст сообщения')),
                ('time_create', models.DateTimeField(auto_now=True, help_text='Если оставить поля пустыми, время установится автоматически по московскому часовому поясу', verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('Опубликован', 'Опубликован'), ('Модерация', 'Модерация'), ('Отклонён', 'Отклонён')], default='Модерация', help_text='При выборе статуса "Отклонён" попадает в очередь на удаление', max_length=20, verbose_name='Статус модерации')),
                ('moderation', models.BooleanField(default=False, verbose_name='Прошел модерацию?')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='cash.review', verbose_name='Отзыв')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ('-time_create', 'status', 'review'),
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название города(ru)')),
                ('en_name', models.CharField(max_length=100, unique=True, verbose_name='Название города(en)')),
                ('code_name', models.CharField(max_length=10, unique=True, verbose_name='Кодовое имя')),
                ('is_parse', models.BooleanField(default=False, verbose_name='Статус парсинга')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='cash.country', verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='blacklistelement',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='black_list_cash_directions', to='cash.city', verbose_name='Город'),
        ),
        migrations.AddField(
            model_name='blacklistelement',
            name='direction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='black_list_directions', to='cash.direction', verbose_name='Направление для обмена'),
        ),
        migrations.CreateModel(
            name='ExchangeDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_count', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Сколько отдаём')),
                ('out_count', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Сколько получаем')),
                ('min_amount', models.CharField(max_length=50, verbose_name='Минимальное количество')),
                ('max_amount', models.CharField(max_length=50, verbose_name='Максимальное количество')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно?')),
                ('fromfee', models.FloatField(blank=True, null=True, verbose_name='Процент')),
                ('params', models.CharField(blank=True, max_length=100, null=True, verbose_name='Параметры')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_directions', to='cash.city', verbose_name='Город')),
                ('direction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exchange_directions', to='cash.direction', verbose_name='Направление для обмена')),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='directions', to='cash.exchange', verbose_name='Обменник')),
            ],
            options={
                'verbose_name': 'Готовое направление',
                'verbose_name_plural': 'Готовые направления',
                'ordering': ['-is_active', 'exchange', 'city', 'direction__valute_from', 'direction__valute_to'],
                'unique_together': {('exchange', 'city', 'direction')},
            },
        ),
        migrations.AddIndex(
            model_name='exchange',
            index=models.Index(fields=['name'], name='cash_exchan_name_7ff575_idx'),
        ),
        migrations.AddIndex(
            model_name='exchange',
            index=models.Index(fields=['en_name'], name='cash_exchan_en_name_299154_idx'),
        ),
        migrations.AddIndex(
            model_name='direction',
            index=models.Index(fields=['valute_from', 'valute_to'], name='cash_direct_valute__7db9f5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='direction',
            unique_together={('valute_from', 'valute_to')},
        ),
        migrations.AlterUniqueTogether(
            name='comment',
            unique_together={('review', 'username', 'time_create')},
        ),
        migrations.AddIndex(
            model_name='city',
            index=models.Index(fields=['code_name'], name='cash_city_code_na_f76bcc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='blacklistelement',
            unique_together={('city', 'direction')},
        ),
    ]
